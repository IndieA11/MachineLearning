import pandas as pd
import numpy as np
from sklearn.linear_model import SGDRegressor
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
from statistics import mean
# Reading the data from the csv files and storing it in a DataFrame.

dataset = pd.read_csv("train_inputs_lin.csv")

train_data = dataset.values
y = train_data[:,-1].reshape(train_data.shape[0],1)
X = train_data[:,:-1]
ypoints = [0,0.1, 0.2 ,0.3 ,0.4 ,0.5, 0.6, 0.7 ,0.8, 0.9, 1,  1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2,  2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3 ]
from sklearn.model_selection import train_test_split
iteration = 10
learning_rate = 0.000005
graph= list()
min = 100
minlearn = 0
while learning_rate < 3.1:
    print('Learning Rate: %.3f%%' % learning_rate)
    fold = list()
    for i in range(10):
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = i*10)
        theta, cost_list = model(X_train,y_train,learning_rate, iteration=iteration)
        y_pred = np.dot(X_test, theta)
        error = mean_squared_error(y_pred, y_test)
        fold.append(error)
    print(fold)
    mean = (sum(fold)/float(len(fold)))
    if min > mean:
        min= mean
        minlearn = learning_rate
    graph.append(mean)
    print(mean)
    learning_rate = learning_rate + 0.1
print(minlearn)
plt.plot(ypoints, graph)
plt.show()
